class Cursor{
    field Vector position;
        field Array underCursor;
            field Vector prevPosition;
                field bool hasPrev;


    constructor Cursor new()
    {
        let prevPosition = Vector.new(-1, -1);
        let underCursor = Array.new(4);
        let position = Vector.new(16, 16);
        let hasPrev = false;
        do drawCursor();
        return this;
    }
    method void moveDirection(Vector direction){
        var int newX, newY;
        let newX = position.getX() + direction.getX();
        let newY = position.getY() + direction.getY();
        if ((newX > -1) & (newX < 513) & (newY > -1) & (newY < 225)){
            do cleanCursor();
            let position = position.add(direction);
            do DrawUI.updatePosition(position);
            do drawCursor();
        }
        return;
    }
    method void drawCursor(){
        do Screen.setColor(true);
        do Screen.drawPixel(position.getX()+1, position.getY());
        do Screen.drawPixel(position.getX()-1, position.getY());
        do Screen.drawPixel(position.getX(), position.getY()+1);
        do Screen.drawPixel(position.getX(), position.getY()-1);
        return;
    }
    method void cleanCursor(){
        do Screen.setColor(false);
        do Screen.drawPixel(position.getX()+1, position.getY());
        do Screen.drawPixel(position.getX()-1, position.getY());
        do Screen.drawPixel(position.getX(), position.getY()+1);
        do Screen.drawPixel(position.getX(), position.getY()-1);
        return;
    }
    method void savePosition(){
        let prevPosition = position;
        let hasPrev = true;
        return;
    }
    method Vector prevIsNone(){
        return hasPrev;
    }
    method int getPositionX(){
        return position.getX();
    }

        method int getPositionY(){
        return position.getY();
    }
}
